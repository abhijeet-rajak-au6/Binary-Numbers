[{"/home/avirav/Documents/Interview Task/Binary number/client/src/index.js":"1","/home/avirav/Documents/Interview Task/Binary number/client/src/App.js":"2","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/store.js":"3","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/rootReducer.js":"4","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/reducer/userReducer.js":"5","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/ActionTypes.js":"6","/home/avirav/Documents/Interview Task/Binary number/client/src/components/auth/Login.js":"7","/home/avirav/Documents/Interview Task/Binary number/client/src/components/FormInput/FormInput.js":"8","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/actions/userAction.js":"9","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/config.js":"10","/home/avirav/Documents/Interview Task/Binary number/client/src/components/errors/Alert.js":"11","/home/avirav/Documents/Interview Task/Binary number/client/src/components/auth/Register.jsx":"12","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/actions/alertAction.js":"13","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/reducer/alertReducer.js":"14","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/mapStateToProps.js":"15","/home/avirav/Documents/Interview Task/Binary number/client/src/pages/Dashboard.js":"16","/home/avirav/Documents/Interview Task/Binary number/client/src/components/AllUserList/AllUserList.js":"17","/home/avirav/Documents/Interview Task/Binary number/client/src/components/AllUserList/UserTransactionList.js":"18","/home/avirav/Documents/Interview Task/Binary number/client/src/components/RouteProtection/RouteProtection.jsx":"19"},{"size":219,"mtime":1616181307808,"results":"20","hashOfConfig":"21"},{"size":1167,"mtime":1616351317281,"results":"22","hashOfConfig":"21"},{"size":337,"mtime":1616183388120,"results":"23","hashOfConfig":"21"},{"size":267,"mtime":1616251958389,"results":"24","hashOfConfig":"21"},{"size":1400,"mtime":1616344842693,"results":"25","hashOfConfig":"21"},{"size":474,"mtime":1616344265345,"results":"26","hashOfConfig":"21"},{"size":2858,"mtime":1616348157701,"results":"27","hashOfConfig":"21"},{"size":666,"mtime":1616181977268,"results":"28","hashOfConfig":"21"},{"size":6821,"mtime":1616348302817,"results":"29","hashOfConfig":"21"},{"size":79,"mtime":1616182359900,"results":"30","hashOfConfig":"21"},{"size":368,"mtime":1616183679172,"results":"31","hashOfConfig":"21"},{"size":5278,"mtime":1616348143965,"results":"32","hashOfConfig":"21"},{"size":452,"mtime":1616348213621,"results":"33","hashOfConfig":"21"},{"size":562,"mtime":1616251919273,"results":"34","hashOfConfig":"21"},{"size":354,"mtime":1616344619349,"results":"35","hashOfConfig":"21"},{"size":4408,"mtime":1616348110213,"results":"36","hashOfConfig":"21"},{"size":1230,"mtime":1616269652205,"results":"37","hashOfConfig":"21"},{"size":1093,"mtime":1616348184833,"results":"38","hashOfConfig":"21"},{"size":1021,"mtime":1616351079185,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"11bo9ta",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/avirav/Documents/Interview Task/Binary number/client/src/index.js",[],["84","85"],"/home/avirav/Documents/Interview Task/Binary number/client/src/App.js",["86"],"/home/avirav/Documents/Interview Task/Binary number/client/src/redux/store.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/redux/rootReducer.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/redux/reducer/userReducer.js",["87"],"import {\n  USER_LOGIN,\n  USER_LOGOUT,\n  USER_REGISTER,\n  ALL_USER_BALNACE,\n  ALL_USER_BALNACE_ERR,\n  SET_USER_TRANSACTION,\n  SET_BALANCE\n} from \"../ActionTypes\";\n\nconst initialState = {\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  allUserBalance: null,\n  allUserBalanceErr: null,\n  transactionMessage: null,\n  userTransaction: null,\n  balance: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOGIN:\n      localStorage.setItem(\"user\", JSON.stringify(payload));\n      return {\n        ...state,\n        user: payload,\n      };\n    case USER_LOGOUT:\n      localStorage.removeItem(\"user\");\n      return {\n        ...state,\n        user: null,\n        allUserBalance: null,\n        allUserBalanceErr: null,\n        transactionMessage: null,\n        userTransaction: null,\n      };\n    case ALL_USER_BALNACE:\n      return {\n        ...state,\n        allUserBalance: payload,\n      };\n    case ALL_USER_BALNACE_ERR:\n      return {\n        ...state,\n        allUserBalanceErr: payload,\n      };\n\n    case SET_USER_TRANSACTION: {\n      return {\n        ...state,\n        userTransaction: payload,\n      };\n    }\n    case SET_BALANCE: {\n      console.log(payload)\n      return {\n        ...state,\n        balance: payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/ActionTypes.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/components/auth/Login.js",["88"],"import React, { Component } from \"react\";\nimport Alert from \"../errors/Alert\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../FormInput/FormInput\";\nimport { userLogin } from \"../../redux/actions/userAction\";\nimport { removeAlert, setAlert } from \"../../redux/actions/alertAction\";\nimport { mapUserStateToProps } from \"../../redux/mapStateToProps\";\n\nimport { Link } from \"react-router-dom\";\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: {},\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { email, password } = event.target;\n    const { userLogin, history, setAlert, removeAlert } = this.props;\n    try {\n      const message = await userLogin({\n        email: email.value,\n        password: password.value,\n      });\n\n      if (message.includes(\"Welcome\")) {\n        history.push(\"/dashboard\");\n      }\n    } catch (err) {\n      console.log(err);\n      setAlert(err, \"error\");\n      setTimeout(() => {\n        removeAlert();\n      }, 3000);\n    }\n  };\n  render() {\n    const { email, password, errors } = this.state;\n    const { alert } = this.props;\n    // const { message, messageType } = this.props.notifyData;\n    return (\n      <div className=\"login d-flex flex-row justify-content-center my-5\">\n        <div className=\"card w-50\">\n          <div className=\"card-body\">\n            {alert.message ? <Alert {...alert} /> : null}\n            <h1 className=\"text-primary text-center mb-5\">\n              {\" \"}\n              <i className=\"fas fa-lock\"></i> Login\n            </h1>\n\n            <form onSubmit={this.handleSubmit}>\n              <FormInput\n                labelText=\"Email address\"\n                CustomOnChange={this.handleChange}\n                type=\"email\"\n                name=\"email\"\n                customClass=\"form-control\"\n                id=\"exampleInputEmail1\"\n                placeholder=\"Enter email ....\"\n                value={email}\n              />\n\n              <FormInput\n                labelText=\"Password\"\n                CustomOnChange={this.handleChange}\n                type=\"password\"\n                name=\"password\"\n                customClass=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Enter password ....\"\n                value={password}\n              />\n              <FormInput\n                type=\"submit\"\n                customClass=\"btn btn-primary d-block mx-auto\"\n              >\n                Login\n              </FormInput>\n              <Link to=\"/register\">Sign Up</Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapUserStateToProps, {\n  userLogin,\n  removeAlert,\n  setAlert,\n})(Login);\n","/home/avirav/Documents/Interview Task/Binary number/client/src/components/FormInput/FormInput.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/redux/actions/userAction.js",["89","90","91"],"import axios from \"axios\";\nimport { keys } from \"../config\";\nimport {\n  USER_LOGIN,\n  USER_LOGOUT,\n  ALL_USER_BALNACE,\n  ALL_USER_BALNACE_ERR,\n  SET_TRANSACTION,\n  SET_ALERT,\n  REMOVE_ALERT,\n  SET_USER_TRANSACTION,\n  SET_BALANCE,\n} from \"../ActionTypes\";\nimport { setAlert, removeAlert } from \"../actions/alertAction\";\n\nexport const userLogin = (userLoginCredentials) => async (dispatch) => {\n\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.post(`${keys.BASE_URL_LOCAL}/login`, {\n        ...userLoginCredentials,\n      });\n\n      dispatch({\n        type: USER_LOGIN,\n        payload: data,\n      });\n      console.log(data);\n      resolve(data.message);\n    } catch (err) {\n      console.log(err.response.data.message);\n      reject(err.response.data.message);\n    }\n  });\n};\n\nexport const userRegister = (registerCtredentials) => async (dispatch) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.post(`${keys.BASE_URL_LOCAL}/register`, {\n        ...registerCtredentials,\n      });\n      console.log(data);\n      resolve(data.message);\n    } catch (err) {\n      console.log(err.response);\n      reject(err.response.data.message);\n    }\n  });\n};\n\nexport const userLogout = () => async (dispatch, getState) => {\n  return new Promise(async (resolve, reject) => {\n    const acessToken = getState().userState.user.token;\n    try {\n      const { data } = await axios.delete(`${keys.BASE_URL_LOCAL}/logout`, {\n        headers: {\n          Authorization: `${acessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      dispatch({\n        type: USER_LOGOUT,\n      });\n      resolve(data.message);\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: USER_LOGOUT,\n      });\n      // reject(err.response.data.message);\n    }\n  });\n};\n\nexport const listAllUserBalance = () => async (dispatch, getState) => {\n  return new Promise(async (resolve, reject) => {\n    const acessToken = getState().userState.user.token;\n    try {\n      const { data } = await axios.get(\n        `${keys.BASE_URL_LOCAL}/sell-alluser-transaction`,\n        {\n          headers: {\n            Authorization: `${acessToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      dispatch({\n        type: ALL_USER_BALNACE,\n        payload: data.userdetails,\n      });\n    } catch (err) {\n      // dispatch({\n      //   type: USER_LOGOUT,\n      // });\n      dispatch({\n        type: ALL_USER_BALNACE_ERR,\n        payload: err.response.data.message,\n      });\n      reject(err.response.data);\n    }\n  });\n};\n\nexport const depositmoney = (money) => async (dispatch, getState) => {\n  try {\n    const acessToken = getState().userState.user.token;\n    const { data } = await axios.post(\n      `${keys.BASE_URL_LOCAL}/deposit-money`,\n      {\n        deposited: parseInt(money),\n      },\n      {\n        headers: {\n          Authorization: `${acessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        message: data.message,\n        messageType: \"success\",\n      },\n    });\n\n    setTimeout(() => {\n      dispatch({\n        type: REMOVE_ALERT,\n      });\n    }, 3000);\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        message: err.response.data.message,\n        messageType: \"error\",\n      },\n    });\n    setTimeout(() => {\n      dispatch({\n        type: REMOVE_ALERT,\n      });\n    }, 3000);\n  }\n};\n\nexport const withdrawMoney = (money) => async (dispatch, getState) => {\n  try {\n    const acessToken = getState().userState.user.token;\n    const { data } = await axios.post(\n      `${keys.BASE_URL_LOCAL}/withdraw-money`,\n      {\n        withdraw: parseInt(money),\n      },\n      {\n        headers: {\n          Authorization: `${acessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        message: data.message,\n        messageType: \"success\",\n      },\n    });\n\n    setTimeout(() => {\n      dispatch({\n        type: REMOVE_ALERT,\n      });\n    }, 3000);\n  } catch (err) {\n    if (err.response.data.message === \"jwt expired\") {\n      dispatch({\n        type: USER_LOGOUT,\n      });\n    } else {\n      dispatch({\n        type: SET_ALERT,\n        payload: {\n          message: err.response.data.message,\n          messageType: \"error\",\n        },\n      });\n      setTimeout(() => {\n        dispatch({\n          type: REMOVE_ALERT,\n        });\n      }, 3000);\n    }\n  }\n};\n\nexport const getUserTransaction = (id) => async (dispatch, getState) => {\n  try {\n    const acessToken = getState().userState.user.token;\n    const { data } = await axios.get(\n      `${keys.BASE_URL_LOCAL}/get-user-transaction/${id}`,\n      {\n        headers: {\n          Authorization: `${acessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    dispatch({\n      type: SET_USER_TRANSACTION,\n      payload: data.userTransaction,\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_USER_TRANSACTION,\n      payload: null,\n    });\n    \n  }\n};\n\nexport const getLoggedInUserTransaction = () => async (dispatch, getState) => {\n  try {\n    const acessToken = getState().userState.user.token;\n    const { data } = await axios.get(\n      `${keys.BASE_URL_LOCAL}/see-my-transaction`,\n      {\n        headers: {\n          Authorization: `${acessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    dispatch({\n      type: SET_USER_TRANSACTION,\n      payload: data.AllTransactions,\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_USER_TRANSACTION,\n      payload: null,\n    });\n  }\n};\n\nexport const getBalance = () => async (dispatch, getState) => {\n  try {\n    const acessToken = getState().userState.user.token;\n    const { data } = await axios.get(`${keys.BASE_URL_LOCAL}/me`, {\n      headers: {\n        Authorization: `${acessToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    dispatch({\n      type: SET_BALANCE,\n      payload: data.balance,\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_BALANCE,\n      payload: null,\n    });\n  }\n};\n\n// export const listAllTransaction = ()=>async(dispath, getState)=>{\n//   const acessToken = getState().userState.user.token;\n//   console.log(acessToken);\n//   try {\n//     const { data } = await axios.get(`${keys.BASE_URL_LOCAL}/sell-alluser-transaction`, {\n//       headers: {\n//         Authorization: `${acessToken}`,\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n//     console.log(data);\n//     dispatch({\n//       type: ALL_USER_BALNACE,\n//       payload:data.userdetails\n//     });\n//   }catch(err){\n\n//   }\n// }\n","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/config.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/components/errors/Alert.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/components/auth/Register.jsx",["92"],"import React, { Component } from \"react\";\nimport Alert from \"../errors/Alert\";\nimport FormInput from \"../FormInput/FormInput\";\nimport { connect } from \"react-redux\";\nimport { userRegister } from \"../../redux/actions/userAction\";\nimport { removeAlert, setAlert } from \"../../redux/actions/alertAction\";\nimport { mapUserStateToProps } from \"../../redux/mapStateToProps\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    account_no: \"\",\n    role: \"customer\",\n    errors: {},\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const { name, email, password, auth, account_no } = event.target;\n    const { userRegister, history, setAlert, removeAlert } = this.props;\n\n\n    try {\n      if (!auth.value) {\n        setAlert(\"please select registration type\", \"error\");\n        setTimeout(() => {\n          removeAlert();\n        }, 3000);\n        return;\n        // this.setState({\n        //   errors: {\n        //     msg: \"please select registration type \",\n        //     messageType: \"fail\",\n        //   },\n        // });\n        // return;\n      }\n      let payload;\n      if (auth.value === \"customer\") {\n        payload = {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n          account_no: account_no.value,\n          role: auth.value,\n        };\n      } else {\n        payload = {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n          role: auth.value,\n        };\n      }\n\n      const message = await userRegister(payload);\n      if (message.includes(\"user registered sucessfully\")) {\n        history.push(\"/login\");\n      }\n    } catch (err) {\n      console.log(err);\n      setAlert(err, \"error\");\n      setTimeout(() => {\n        removeAlert();\n      }, 3000);\n    }\n  };\n  render() {\n    const { email, password, name, errors, account_no, role } = this.state;\n    // const { message, messageType } = this.props.notifyData;\n    const { alert } = this.props;\n    return (\n      <div className=\"login d-flex flex-row justify-content-center\">\n        <div className=\"card w-50\">\n          <div className=\"card-body\">\n            {alert.message ? <Alert {...alert} /> : null}\n            <h1 className=\"text-primary text-center mb-5\">\n              {\" \"}\n              <i className=\"fas fa-lock\"></i> Register\n            </h1>\n\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"registeras text-center\">\n                <input\n                  onChange={(e) => this.setState({ role: e.target.value })}\n                  type=\"radio\"\n                  id=\"male\"\n                  name=\"auth\"\n                  value=\"banker\"\n                />\n                <label className=\"mr-4\" htmlFor=\"male\">\n                  Register as Banker\n                </label>\n                <input\n                  onChange={(e) => this.setState({ role: e.target.value })}\n                  type=\"radio\"\n                  id=\"female\"\n                  name=\"auth\"\n                  value=\"customer\"\n                />\n                <label htmlFor=\"female\">Register as Customer</label>\n              </div>\n\n              <FormInput\n                labelText=\"User Name\"\n                CustomOnChange={this.handleChange}\n                type=\"text\"\n                name=\"name\"\n                customClass=\"form-control\"\n                id=\"exampleInputName1\"\n                placeholder=\"Enter User Name ....\"\n                value={name}\n              />\n              <FormInput\n                labelText=\"Email address\"\n                CustomOnChange={this.handleChange}\n                type=\"email\"\n                name=\"email\"\n                customClass=\"form-control\"\n                id=\"exampleInputEmail1\"\n                placeholder=\"Enter email ....\"\n                value={email}\n              />\n\n              {role === \"customer\" && (\n                <FormInput\n                  labelText=\"Account No\"\n                  CustomOnChange={this.handleChange}\n                  type=\"number\"\n                  name=\"account_no\"\n                  customClass=\"form-control\"\n                  id=\"exampleInputAccountNo1\"\n                  placeholder=\"Enter Account no ....\"\n                  value={account_no}\n                />\n              )}\n\n              <FormInput\n                labelText=\"Password\"\n                CustomOnChange={this.handleChange}\n                type=\"password\"\n                name=\"password\"\n                customClass=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Enter password ....\"\n                value={password}\n              />\n              <FormInput\n                type=\"submit\"\n                customClass=\"btn btn-primary d-block mx-auto\"\n              >\n                Register\n              </FormInput>\n              <Link to=\"/login\">Sign In</Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapUserStateToProps, {\n  userRegister,\n  removeAlert,\n  setAlert,\n})(Register);\n","/home/avirav/Documents/Interview Task/Binary number/client/src/redux/actions/alertAction.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/redux/reducer/alertReducer.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/redux/mapStateToProps.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/pages/Dashboard.js",["93"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { mapUserStateToProps } from \"../redux/mapStateToProps\";\nimport {\n  userLogout,\n  listAllUserBalance,\n  depositmoney,\n  withdrawMoney,\n  getUserTransaction,\n  getLoggedInUserTransaction,\n  getBalance,\n} from \"../redux/actions/userAction\";\nimport AllUserList from \"../components/AllUserList/AllUserList\";\nimport FormInput from \"../components/FormInput/FormInput\";\nimport Alert from \"../components/errors/Alert\";\n\nconst Dashboard = (props) => {\n  const [deposit, setDeposit] = useState(\"\");\n  const [withraw, setWithDraw] = useState(\"\");\n\n  useEffect(() => {\n    if (props.user.role === \"banker\") props.listAllUserBalance();\n    if (props.user.role === \"customer\") props.getBalance();\n  }, []);\n\n  const handleLogout = async (e) => {\n    try {\n      props.history.push(\"/login\");\n      await props.userLogout();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleTransaction = async (id) => {\n    // call user transaction\n    try {\n      props.getUserTransaction(id);\n      props.history.push(\"/user-transaction-list\");\n    } catch (err) {}\n  };\n\n  const handleWithdrawMoney = async (e) => {\n    try {\n      await props.withdrawMoney(withraw);\n      await props.getBalance();\n      setWithDraw(\"\");\n    } catch (err) {}\n  };\n\n  const handleDepositMoney = async (e) => {\n    try {\n      props.depositmoney(deposit);\n      props.getBalance();\n      setDeposit(\"\");\n    } catch (err) {}\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"deposit\") setDeposit(e.target.value);\n    else setWithDraw(e.target.value);\n  };\n\n  const handleSeeYourTransaction = async (e) => {\n    try {\n      props.getLoggedInUserTransaction();\n      props.history.push(\"/user-transaction-list\");\n    } catch (err) {}\n  };\n\n  let element;\n\n  if (props.user.role === \"banker\") {\n    element = <AllUserList clickTransaction={handleTransaction} />;\n  } else {\n    element = (\n      <>\n        {<h2>Total balance: {props.balance}</h2>}\n        {props.alert.message ? <Alert {...props.alert} /> : null}\n        <div\n          className=\"mt-5\"\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <FormInput\n              CustomOnChange={handleChange}\n              type=\"number\"\n              name=\"withdraw\"\n              customClass=\"form-control\"\n              id=\"exampleInputName1\"\n              placeholder=\"Enter Withdrawl Money ....\"\n              value={withraw}\n            />\n            <button\n              onClick={handleWithdrawMoney}\n              className=\"mx-3 btn btn-primary\"\n            >\n              With draw\n            </button>{\" \"}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <FormInput\n              CustomOnChange={handleChange}\n              type=\"number\"\n              name=\"deposit\"\n              customClass=\"form-control\"\n              id=\"exampleInputName1\"\n              placeholder=\"Enter Deposit Money ...\"\n              value={deposit}\n            />\n            <button\n              onClick={handleDepositMoney}\n              className=\"mx-3 btn btn-primary\"\n            >\n              Deposit money\n            </button>\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <button\n            onClick={handleSeeYourTransaction}\n            className=\"btn btn-primary\"\n          >\n            See Your Transaction\n          </button>\n        </div>\n      </>\n    );\n  }\n  return (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h1 style={{ margin: \"0 auto\" }}>{props.user.message}</h1>\n        <button\n          onClick={handleLogout}\n          // style={{ marginLeft: \"auto\" }}\n          className=\"mx-auto  btn btn-warning\"\n        >\n          Logout\n        </button>\n      </div>\n      {element}\n    </>\n  );\n};\n\nexport default connect(mapUserStateToProps, {\n  userLogout,\n  listAllUserBalance,\n  depositmoney,\n  withdrawMoney,\n  getUserTransaction,\n  getLoggedInUserTransaction,\n  getBalance,\n})(Dashboard);\n","/home/avirav/Documents/Interview Task/Binary number/client/src/components/AllUserList/AllUserList.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/components/AllUserList/UserTransactionList.js",[],"/home/avirav/Documents/Interview Task/Binary number/client/src/components/RouteProtection/RouteProtection.jsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":3,"column":25,"nodeType":"100","messageId":"101","endLine":3,"endColumn":30},{"ruleId":"98","severity":1,"message":"102","line":4,"column":3,"nodeType":"100","messageId":"101","endLine":4,"endColumn":16},{"ruleId":"98","severity":1,"message":"103","line":44,"column":30,"nodeType":"100","messageId":"101","endLine":44,"endColumn":36},{"ruleId":"98","severity":1,"message":"104","line":8,"column":3,"nodeType":"100","messageId":"101","endLine":8,"endColumn":18},{"ruleId":"98","severity":1,"message":"105","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":18},{"ruleId":"98","severity":1,"message":"106","line":14,"column":20,"nodeType":"100","messageId":"101","endLine":14,"endColumn":31},{"ruleId":"98","severity":1,"message":"103","line":78,"column":36,"nodeType":"100","messageId":"101","endLine":78,"endColumn":42},{"ruleId":"107","severity":1,"message":"108","line":24,"column":6,"nodeType":"109","endLine":24,"endColumn":8,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'USER_REGISTER' is defined but never used.","'errors' is assigned a value but never used.","'SET_TRANSACTION' is defined but never used.","'setAlert' is defined but never used.","'removeAlert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [props]",{"range":"116","text":"117"},[786,788],"[props]"]